apiVersion: grizzly.grafana.com/v1alpha1
kind: AlertRuleGroup
metadata:
    name: duplo-common.Logs
spec:
    folderUid: duplo-common
    interval: 60
    rules:
        - annotations:
            description: Log - {{$labels.msg}} - {{$labels.err}}
            summary: 'Compactor failed to get ring : Cluster - {{$labels.cluster}}'
          condition: C
          data:
            - datasourceUid: duplo-logging
              model:
                datasource:
                    type: loki
                    uid: duplo-logging
                editorMode: code
                expr: sum(count_over_time({service_name="tempo"} | json | logfmt | drop __error__, __error_details__ | caller=~".*compactor.go.*" | msg="failed to get ring" | err=~".*at least 1 live replicas required, could only find 0.*" | line_format "{{ . }}" [$__auto])) by (msg, cluster,err, level, namespace)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                queryType: instant
                refId: A
              queryType: instant
              refId: A
              relativeTimeRange:
                from: 900
            - datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - C
                      reducer:
                        params: []
                        type: last
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: A
                intervalMs: 1000
                maxDataPoints: 43200
                refId: C
                type: threshold
              refId: C
              relativeTimeRange: {}
          execErrState: Error
          folderUID: duplo-common
          for: 1m0s
          labels:
            severity: warning
          noDataState: NoData
          orgID: 1
          ruleGroup: Logs
          title: Tempo Compactor Alert
          uid: Tempocompactoralert
        - annotations:
            description: 'Log - {{$labels.msg}} - max : {{$labels.max}} - Size : {{$labels.size}}'
            summary: 'Tempo rate limit error : Cluster - {{$labels.cluster}}'
          condition: C
          data:
            - datasourceUid: duplo-logging
              model:
                datasource:
                    type: loki
                    uid: duplo-logging
                editorMode: code
                expr: sum(count_over_time({service_name="tempo"} | json | logfmt | drop __error__, __error_details__ | caller=~".*rate_limited_logger.*" | msg="TRACE_TOO_LARGE" [$__auto])) by (msg, cluster,err, level, namespace, max, size)
                hide: false
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                queryType: instant
                refId: A
              queryType: instant
              refId: A
              relativeTimeRange:
                from: 600
            - datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - C
                      reducer:
                        params: []
                        type: last
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: A
                intervalMs: 1000
                maxDataPoints: 43200
                refId: C
                type: threshold
              refId: C
              relativeTimeRange: {}
          execErrState: Error
          folderUID: duplo-common
          for: 1m0s
          labels:
            severity: warning
          noDataState: NoData
          orgID: 1
          ruleGroup: Logs
          title: Tempo rate limit error
          uid: Temporatelimiterror
        - annotations:
            description: |-
                Pod - {{ $labels.pod }}
                Log - {{ $labels.msg }}
            summary: 'Loki cluster has insufficient healthy replicas : Cluster - {{ $labels.cluster }}'
          condition: C
          data:
            - datasourceUid: duplo-logging
              model:
                datasource:
                    type: loki
                    uid: duplo-logging
                editorMode: code
                expr: sum(count_over_time({service_name="duplo-logging"} |~ "(?i)at least 2 live replicas required" | json | logfmt | drop __error__, __error_details__ | caller=~".*logging.go.*"  [$__auto])) by (msg, cluster, level, namespace, pod)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                queryType: instant
                refId: A
              queryType: instant
              refId: A
              relativeTimeRange:
                from: 600
            - datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - C
                      reducer:
                        params: []
                        type: last
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: A
                intervalMs: 1000
                maxDataPoints: 43200
                refId: C
                type: threshold
              refId: C
              relativeTimeRange: {}
          execErrState: Error
          folderUID: duplo-common
          for: 1m0s
          labels:
            severity: warning
          noDataState: NoData
          orgID: 1
          ruleGroup: Logs
          title: Loki Low Live Replicas
          uid: Lokilowlivereplicas
        - annotations:
            description: |-
                Pod - {{ $labels.pod }}
                Log - {{ $labels.msg }}
            summary: 'Tempo compactor failure logs detected : Cluster - {{ $labels.cluster }}'
          condition: C
          data:
            - datasourceUid: duplo-logging
              model:
                datasource:
                    type: loki
                    uid: duplo-logging
                editorMode: code
                expr: sum(count_over_time({service_name="tempo"} |~ "(?i)(Marking duplo-tracing-compactor|Suspect duplo-tracing-compactor)" | json | logfmt | drop __error__, __error_details__ | caller=~".*memberlist_logger.go.*"  [$__auto])) by (msg, cluster, level, namespace, pod)
                hide: false
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                queryType: instant
                refId: A
              queryType: instant
              refId: A
              relativeTimeRange:
                from: 1800
            - datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - C
                      reducer:
                        params: []
                        type: last
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: A
                intervalMs: 1000
                maxDataPoints: 43200
                refId: C
                type: threshold
              refId: C
              relativeTimeRange: {}
          execErrState: Error
          folderUID: duplo-common
          for: 1m0s
          labels:
            severity: critical
          noDataState: NoData
          orgID: 1
          ruleGroup: Logs
          title: Tempo Compactor Failure Alert
          uid: Tempocompactorfailurealert
        - annotations:
            description: |-
                Log - {{$labels.details}}
                Msg : {{$labels.msg}}
                Pod : {{$labels.pod}}
            summary: 'Loki rate limit alert : Cluster - {{$labels.cluster}}'
          condition: C
          data:
            - datasourceUid: duplo-logging
              model:
                datasource:
                    type: loki
                    uid: duplo-logging
                editorMode: code
                expr: sum(count_over_time({container="loki"} |~ "(?i)rate limit" | json | logfmt | drop __error__, __error_details__ | caller=~".*manager.go.*" | msg="write operation failed" [$__auto])) by (msg, cluster, level, namespace, details)
                instant: true
                intervalMs: 1000
                maxDataPoints: 43200
                queryType: instant
                refId: A
              queryType: instant
              refId: A
              relativeTimeRange:
                from: 900
            - datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params:
                            - C
                      reducer:
                        params: []
                        type: last
                      type: query
                datasource:
                    type: __expr__
                    uid: __expr__
                expression: A
                intervalMs: 1000
                maxDataPoints: 43200
                refId: C
                type: threshold
              refId: C
              relativeTimeRange: {}
          execErrState: Error
          folderUID: duplo-common
          for: 1m0s
          labels:
            severity: warning
          noDataState: NoData
          orgID: 1
          ruleGroup: Logs
          title: Loki rate limit alert
          uid: Lokiratelimitalert
    title: Logs